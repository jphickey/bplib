name: Build And Run BPLib Functional Tests

on:
  push:
  pull_request:

# Force bash to apply pipefail option so pipeline failures aren't masked
defaults:
  run:
    shell: bash

jobs:
  # Checks for duplicate actions. Skips push actions if there is a matching or
  # duplicate pull-request action.
  checks-for-duplicates:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: 'same_content'
          skip_after_successful_duplicate: 'true'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'

  build-and-run:
    needs: checks-for-duplicates
    if: ${{ needs.checks-for-duplicates.outputs.should_skip != 'true' || contains(github.ref, 'main') }}
    name: Build and run app, confirm startup message
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout NASA OSAL main branch
        uses: actions/checkout@v3
        with:
          repository: nasa/osal
          ref: main
          path: osal

      - name: Checkout BPLib
        uses: actions/checkout@v3
        with:
          path: bplib

      - name: Set up OSAL Build
        run: |
          mkdir $GITHUB_WORKSPACE/build-osal
          cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=debug -DOSAL_OMIT_DEPRECATED=TRUE -DENABLE_UNIT_TESTS=on -DOSAL_SYSTEM_BSPTYPE=generic-linux -DOSAL_CONFIG_DEBUG_PERMISSIVE_MODE=on -S $GITHUB_WORKSPACE/osal -B $GITHUB_WORKSPACE/build-osal

      - name: Install OSAL
        run: |
          make -C $GITHUB_WORKSPACE/build-osal -j4 install

      - name: Set up BPLib Build
        run: |
          mkdir $GITHUB_WORKSPACE/build-bplib
          cmake -DCMAKE_BUILDTYPE=debug -DBPLIB_OS_LAYER=OSAL -DBPLIB_ENABLE_UNIT_TESTS=TRUE -S $GITHUB_WORKSPACE/bplib -B $GITHUB_WORKSPACE/build-bplib

      - name: Build BPLib
        run: |
          make -C $GITHUB_WORKSPACE/build-bplib -j4 all

      - name: Run Tests
        working-directory: $GITHUB_WORKSPACE/build-bplib
        run: |
          ctest -O $GITHUB_WORKSPACE/bplib-test.log --output-on-failure -j4

      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          name: Test Log
          path: $GITHUB_WORKSPACE/bplib-test.log
